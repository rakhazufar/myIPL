// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Perumahan {
  id         Int     @id @default(autoincrement())
  nama       String  @db.VarChar(100)
  alamat     String  @db.VarChar(255)
  created_at DateTime  @default(now())
  deleted_at DateTime?

  clusters   Cluster[]
}

model Cluster {
  id           Int     @id @default(autoincrement())
  perumahan_id Int
  nama         String  @db.VarChar(100)
  pengelola_id Int
  perumahan    Perumahan @relation(fields: [perumahan_id], references: [id])
  pengelola    Admin     @relation(fields: [pengelola_id], references: [id])
  created_at   DateTime  @default(now())
  deleted_at   DateTime?

  users        User[]
}

model User {
  id            Int     @id @default(autoincrement())
  cluster_id    Int
  nama          String  @db.VarChar(100)
  alamat        String  @db.VarChar(255)
  nomor_telepon String  @db.VarChar(15) @unique
  email         String  @db.VarChar(25) @unique
  created_at    DateTime  @default(now())
  deleted_at    DateTime?
  cluster       Cluster @relation(fields: [cluster_id], references: [id])
  tagihans      Tagihan[]
  transaksi     Transaksi[]
}

model Admin {
  id            Int     @id @default(autoincrement())
  nama          String  @db.VarChar(100)
  email         String  @unique @db.VarChar(100)
  password      String  @db.VarChar(100)
  nomor_telepon String  @db.VarChar(15)
  role_id       Int
  created_at    DateTime  @default(now())
  deleted_at    DateTime?
  role          Role    @relation(fields: [role_id], references: [id])
  clusters      Cluster[]
}

model Role {
  id     Int     @id @default(autoincrement())
  nama   String  @db.VarChar(50)
  admins Admin[]
}

model StatusTagihan {
  id       Int     @id @default(autoincrement())
  nama     String  @db.VarChar(50)
  tagihans Tagihan[]
}

model Tagihan {
  id            Int         @id @default(autoincrement())
  user_id       Int
  nama          String
  jumlah        Float
  status_id     Int
  created_at    DateTime  @default(now())
  deleted_at    DateTime?
  user          User        @relation(fields: [user_id], references: [id])
  status        StatusTagihan @relation(fields: [status_id], references: [id])
}

model Transaksi {
  id            Int       @id @default(autoincrement())
  user_id       Int
  reference     String
  created_at    DateTime  @default(now())
  deleted_at    DateTime?
  user          User        @relation(fields: [user_id], references: [id])
}
